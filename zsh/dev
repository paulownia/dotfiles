#!/bin/zsh

# dev command

function dev_add() {
	local KEY=$1
	local CD_PATH=$(pwd)

	if [ ! -f ~/.dev ]; then
		printf "%s\t%s" "$KEY" "$CD_PATH" > ~/.dev
	else awk -F "\t" -v "key=$KEY" '{ if ($1 != key) { print $0 } }' ~/.dev > ~/.dev_tmp
		printf "%s\t%s\n" "$KEY" "$CD_PATH" >> ~/.dev_tmp
		mv ~/.dev_tmp ~/.dev
	fi
}

function dev_delete() {
	local KEY=$1

	if [ ! -f ~/.dev ]; then
		return 1
	fi

	awk -F "\t" -v "key=$KEY" '{ if ($1 != key) { print $0 } }' ~/.dev > ~/.dev_tmp
	mv ~/.dev_tmp ~/.dev
}

function dev_cd() {
	local KEY DIR

	KEY="$1"
	if [ -z "$KEY" ]; then
		local SELECTED=$(cat ~/.dev | column -t | fzf)
		if [[ -z $SELECTED ]]; then
			return 1
		fi

		local KEY_DIR=($(echo $SELECTED | awk '{ print $1, $2 }'))
		KEY=$KEY_DIR[1]
		DIR=$KEY_DIR[2]
	else
		DIR=$(awk -F "\t" -v "key=$KEY" '{ if ($1 == key) { print $2; exit } }' ~/.dev)
	fi

	if [ -z "$DIR" ] || [ ! -d "$DIR" ]; then
		return 1
	fi

	cd "$DIR" || return 1

	title $KEY

	pwd
}


function dev_list() {
	column -t < ~/.dev
}

function dev() {
	while getopts d:a:sl OPT
	do
		case $OPT in
			l)
				dev_list
				return $!
				;;
			a)
				dev_add "$OPTARG"
				return $!
				;;
			d)
				dev_delete "$OPTARG"
				return $!
				;;
			*)
				return 1
		esac
	done
	dev_cd $1
}

function _dev_projects() {
	local -a CD_LIST
	CD_LIST=( $(cat ~/.dev | cut -f 1) )
	_describe "Projects" CD_LIST
}

function _dev_pwd() {
	_values "keyword candidates" $(basename ${PWD})
}

function _dev() {
	_arguments \
		'(- *)'-l'[list all projects]' \
		'(- *)'-a'[add project]:keyword:_dev_pwd' \
		'(- *)'-d'[delete project]:project:_dev_projects' \
		'(- *)*:project:_dev_projects'
}

compdef _dev dev

