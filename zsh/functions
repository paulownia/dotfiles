#!/bin/zsh

function mute() {
	"$@" 1>/dev/null 2>&1
}

function google() {
	if [[ ${#*} -eq 0 ]]; then return 1; fi
	Q=$(node -p -e 'process.argv.slice(1).map(q => encodeURIComponent(q)).join("+")' "$@")
	#Q=$(echo "$*" | nkf -WwMQ | tr = %)
	#Q=$(echo "${(j/%20/)*}")
	open "https://www.google.com/search?q=$Q"
}

function fcd() {
	if ! isInstalled fzf; then
		echo "[ERROR] peco is not installed. type 'brew install peco'"
		return 1
	fi

	if [ -z "$1" ]; then
		return 1
	fi

	# https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/SpotlightQuery/Concepts/QueryFormat.html
	local MD_QUERY="kMDItemContentType == 'public.folder' && kMDItemFSName == '$1*'"

	local RESULT=$(mdfind -onlyin ~ "$MD_QUERY" | fzf)

	if [ -z "$RESULT" ]; then
		return 1
	fi

	echo $RESULT
	cd $RESULT
}

# find regular files (excludes invisible files)
function ff() {
	F="./"
	if [[ -n $2 ]]; then
	  F="$2"
	fi

	mdfind -onlyin "$F" -name "$1"
}

function fo() {
	local F=$(ff "$1" "$2" | fzf -e --exit-0 --select-1)
	if [[ -z $F ]]; then
		return 1
	fi
	open $F
}

function fvi() {
	local F=$(ff "$1" "$2" | fzf -e --exit-0 --select-1)
	if [[ -z $F ]]; then
		return 1
	fi

	print -S "vim $F"
	vim $F
}

alias fv=fvi

function title() {
	if [ -z "$1" ]; then
		return 1;
	fi

	echo -en "\033];$@\007"
}

# to open this git repo in sourcetree
function sourcetree() {
	local dir=$(git rev-parse --show-cdup)
	if [ -z "${dir}" ]; then
		dir="."
	fi
	open -a SourceTree ${dir}
}

# jq + less
function jl() {
	if ! isInstalled jq; then
		echo "[ERROR] jq is not installed. type 'brew install jq'"
		return 1
	fi

	local QUERY
	local FILE

	if [ -p /dev/stdin ]; then
		# pipe: cat hoge.json | jl .
		if [ $# -eq 0 ]; then
			QUERY="."
		else
			QUERY="$1"
		fi
		FILE="-"
	elif [ -t 0 ]; then
		# file: jl . hoge.json
		if [ $# -eq 1 ]; then
			QUERY="."
			FILE=$1
		elif [ $# -eq 2 ]; then
			QUERY="$1"
			FILE="$2"
		else
			return 1
		fi
	else
		# redirect stdin: jl . <hoge.json
		if [ $# -eq 0 ]; then
			QUERY="."
		else
			QUERY="$1"
		fi
		FILE="-"
	fi

	jq "$QUERY" -C 2>&1 $FILE | less -R
}

